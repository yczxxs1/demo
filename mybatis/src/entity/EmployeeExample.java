package entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EmployeeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public EmployeeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andEmpnoIsNull() {
			addCriterion("EMPNO is null");
			return (Criteria) this;
		}

		public Criteria andEmpnoIsNotNull() {
			addCriterion("EMPNO is not null");
			return (Criteria) this;
		}

		public Criteria andEmpnoEqualTo(Long value) {
			addCriterion("EMPNO =", value, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoNotEqualTo(Long value) {
			addCriterion("EMPNO <>", value, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoGreaterThan(Long value) {
			addCriterion("EMPNO >", value, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoGreaterThanOrEqualTo(Long value) {
			addCriterion("EMPNO >=", value, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoLessThan(Long value) {
			addCriterion("EMPNO <", value, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoLessThanOrEqualTo(Long value) {
			addCriterion("EMPNO <=", value, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoIn(List<Long> values) {
			addCriterion("EMPNO in", values, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoNotIn(List<Long> values) {
			addCriterion("EMPNO not in", values, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoBetween(Long value1, Long value2) {
			addCriterion("EMPNO between", value1, value2, "empno");
			return (Criteria) this;
		}

		public Criteria andEmpnoNotBetween(Long value1, Long value2) {
			addCriterion("EMPNO not between", value1, value2, "empno");
			return (Criteria) this;
		}

		public Criteria andEnameIsNull() {
			addCriterion("ENAME is null");
			return (Criteria) this;
		}

		public Criteria andEnameIsNotNull() {
			addCriterion("ENAME is not null");
			return (Criteria) this;
		}

		public Criteria andEnameEqualTo(String value) {
			addCriterion("ENAME =", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameNotEqualTo(String value) {
			addCriterion("ENAME <>", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameGreaterThan(String value) {
			addCriterion("ENAME >", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameGreaterThanOrEqualTo(String value) {
			addCriterion("ENAME >=", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameLessThan(String value) {
			addCriterion("ENAME <", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameLessThanOrEqualTo(String value) {
			addCriterion("ENAME <=", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameLike(String value) {
			addCriterion("ENAME like", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameNotLike(String value) {
			addCriterion("ENAME not like", value, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameIn(List<String> values) {
			addCriterion("ENAME in", values, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameNotIn(List<String> values) {
			addCriterion("ENAME not in", values, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameBetween(String value1, String value2) {
			addCriterion("ENAME between", value1, value2, "ename");
			return (Criteria) this;
		}

		public Criteria andEnameNotBetween(String value1, String value2) {
			addCriterion("ENAME not between", value1, value2, "ename");
			return (Criteria) this;
		}

		public Criteria andJobIsNull() {
			addCriterion("JOB is null");
			return (Criteria) this;
		}

		public Criteria andJobIsNotNull() {
			addCriterion("JOB is not null");
			return (Criteria) this;
		}

		public Criteria andJobEqualTo(String value) {
			addCriterion("JOB =", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobNotEqualTo(String value) {
			addCriterion("JOB <>", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobGreaterThan(String value) {
			addCriterion("JOB >", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobGreaterThanOrEqualTo(String value) {
			addCriterion("JOB >=", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobLessThan(String value) {
			addCriterion("JOB <", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobLessThanOrEqualTo(String value) {
			addCriterion("JOB <=", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobLike(String value) {
			addCriterion("JOB like", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobNotLike(String value) {
			addCriterion("JOB not like", value, "job");
			return (Criteria) this;
		}

		public Criteria andJobIn(List<String> values) {
			addCriterion("JOB in", values, "job");
			return (Criteria) this;
		}

		public Criteria andJobNotIn(List<String> values) {
			addCriterion("JOB not in", values, "job");
			return (Criteria) this;
		}

		public Criteria andJobBetween(String value1, String value2) {
			addCriterion("JOB between", value1, value2, "job");
			return (Criteria) this;
		}

		public Criteria andJobNotBetween(String value1, String value2) {
			addCriterion("JOB not between", value1, value2, "job");
			return (Criteria) this;
		}

		public Criteria andMgrIsNull() {
			addCriterion("MGR is null");
			return (Criteria) this;
		}

		public Criteria andMgrIsNotNull() {
			addCriterion("MGR is not null");
			return (Criteria) this;
		}

		public Criteria andMgrEqualTo(Long value) {
			addCriterion("MGR =", value, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrNotEqualTo(Long value) {
			addCriterion("MGR <>", value, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrGreaterThan(Long value) {
			addCriterion("MGR >", value, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrGreaterThanOrEqualTo(Long value) {
			addCriterion("MGR >=", value, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrLessThan(Long value) {
			addCriterion("MGR <", value, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrLessThanOrEqualTo(Long value) {
			addCriterion("MGR <=", value, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrIn(List<Long> values) {
			addCriterion("MGR in", values, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrNotIn(List<Long> values) {
			addCriterion("MGR not in", values, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrBetween(Long value1, Long value2) {
			addCriterion("MGR between", value1, value2, "mgr");
			return (Criteria) this;
		}

		public Criteria andMgrNotBetween(Long value1, Long value2) {
			addCriterion("MGR not between", value1, value2, "mgr");
			return (Criteria) this;
		}

		public Criteria andHiredateIsNull() {
			addCriterion("HIREDATE is null");
			return (Criteria) this;
		}

		public Criteria andHiredateIsNotNull() {
			addCriterion("HIREDATE is not null");
			return (Criteria) this;
		}

		public Criteria andHiredateEqualTo(Date value) {
			addCriterion("HIREDATE =", value, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateNotEqualTo(Date value) {
			addCriterion("HIREDATE <>", value, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateGreaterThan(Date value) {
			addCriterion("HIREDATE >", value, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateGreaterThanOrEqualTo(Date value) {
			addCriterion("HIREDATE >=", value, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateLessThan(Date value) {
			addCriterion("HIREDATE <", value, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateLessThanOrEqualTo(Date value) {
			addCriterion("HIREDATE <=", value, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateIn(List<Date> values) {
			addCriterion("HIREDATE in", values, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateNotIn(List<Date> values) {
			addCriterion("HIREDATE not in", values, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateBetween(Date value1, Date value2) {
			addCriterion("HIREDATE between", value1, value2, "hiredate");
			return (Criteria) this;
		}

		public Criteria andHiredateNotBetween(Date value1, Date value2) {
			addCriterion("HIREDATE not between", value1, value2, "hiredate");
			return (Criteria) this;
		}

		public Criteria andSalIsNull() {
			addCriterion("SAL is null");
			return (Criteria) this;
		}

		public Criteria andSalIsNotNull() {
			addCriterion("SAL is not null");
			return (Criteria) this;
		}

		public Criteria andSalEqualTo(Double value) {
			addCriterion("SAL =", value, "sal");
			return (Criteria) this;
		}

		public Criteria andSalNotEqualTo(Double value) {
			addCriterion("SAL <>", value, "sal");
			return (Criteria) this;
		}

		public Criteria andSalGreaterThan(Double value) {
			addCriterion("SAL >", value, "sal");
			return (Criteria) this;
		}

		public Criteria andSalGreaterThanOrEqualTo(Double value) {
			addCriterion("SAL >=", value, "sal");
			return (Criteria) this;
		}

		public Criteria andSalLessThan(Double value) {
			addCriterion("SAL <", value, "sal");
			return (Criteria) this;
		}

		public Criteria andSalLessThanOrEqualTo(Double value) {
			addCriterion("SAL <=", value, "sal");
			return (Criteria) this;
		}

		public Criteria andSalIn(List<Double> values) {
			addCriterion("SAL in", values, "sal");
			return (Criteria) this;
		}

		public Criteria andSalNotIn(List<Double> values) {
			addCriterion("SAL not in", values, "sal");
			return (Criteria) this;
		}

		public Criteria andSalBetween(Double value1, Double value2) {
			addCriterion("SAL between", value1, value2, "sal");
			return (Criteria) this;
		}

		public Criteria andSalNotBetween(Double value1, Double value2) {
			addCriterion("SAL not between", value1, value2, "sal");
			return (Criteria) this;
		}

		public Criteria andCommIsNull() {
			addCriterion("COMM is null");
			return (Criteria) this;
		}

		public Criteria andCommIsNotNull() {
			addCriterion("COMM is not null");
			return (Criteria) this;
		}

		public Criteria andCommEqualTo(Double value) {
			addCriterion("COMM =", value, "comm");
			return (Criteria) this;
		}

		public Criteria andCommNotEqualTo(Double value) {
			addCriterion("COMM <>", value, "comm");
			return (Criteria) this;
		}

		public Criteria andCommGreaterThan(Double value) {
			addCriterion("COMM >", value, "comm");
			return (Criteria) this;
		}

		public Criteria andCommGreaterThanOrEqualTo(Double value) {
			addCriterion("COMM >=", value, "comm");
			return (Criteria) this;
		}

		public Criteria andCommLessThan(Double value) {
			addCriterion("COMM <", value, "comm");
			return (Criteria) this;
		}

		public Criteria andCommLessThanOrEqualTo(Double value) {
			addCriterion("COMM <=", value, "comm");
			return (Criteria) this;
		}

		public Criteria andCommIn(List<Double> values) {
			addCriterion("COMM in", values, "comm");
			return (Criteria) this;
		}

		public Criteria andCommNotIn(List<Double> values) {
			addCriterion("COMM not in", values, "comm");
			return (Criteria) this;
		}

		public Criteria andCommBetween(Double value1, Double value2) {
			addCriterion("COMM between", value1, value2, "comm");
			return (Criteria) this;
		}

		public Criteria andCommNotBetween(Double value1, Double value2) {
			addCriterion("COMM not between", value1, value2, "comm");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table SCOTT.EMPLOYEE
	 * @mbg.generated  Sun May 21 18:22:30 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.EMPLOYEE
     *
     * @mbg.generated do_not_delete_during_merge Sun May 21 18:08:57 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}